#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import logging
from pathlib import Path
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    CallbackQueryHandler,
    filters,
    ContextTypes,
    ConversationHandler
)
from dotenv import load_dotenv
from models.database import init_db
from models.photo import Photo

load_dotenv()

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO,
    filename='bot.log'
)

logger = logging.getLogger(__name__)

TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
ADMIN_USER_ID = int(os.getenv('ADMIN_USER_ID'))

# –î–æ–±–∞–≤–ª—è–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ —Ñ–æ—Ç–æ
temp_photos = {}


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text('–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ –¥–ª—è –≥–∞–ª–µ—Ä–µ–∏ –Ω–∞ —Å–∞–π—Ç–µ https://project.zombire.ru!')


async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        photo = update.message.photo[-1]
        file = await photo.get_file()

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ
        file_path = f'static/photos/{photo.file_id}.jpg'
        await file.download_to_drive(file_path)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ —Ñ–æ—Ç–æ
        temp_photos[update.effective_user.id] = {
            'file_path': file_path,
            'telegram_user_id': update.effective_user.id
        }

        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ–æ—Ç–æ
        await update.message.reply_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ (—Ç–∞–∫ –∂–µ –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –∞–≤—Ç–æ—Ä—Å—Ç–≤–æ):')
        return 'WAITING_DESCRIPTION'
    except Exception as e:
        logger.error(f"Error in handle_photo: {e}")
        await update.message.reply_text('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
        return ConversationHandler.END


async def handle_description(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        user_id = update.effective_user.id
        if user_id not in temp_photos:
            await update.message.reply_text('–°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é.')
            return ConversationHandler.END

        # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ —Ñ–æ—Ç–æ
        photo_data = temp_photos[user_id]
        description = update.message.text

        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –≤ –ë–î
        db_photo = Photo.create(
            file_path=photo_data['file_path'],
            telegram_user_id=photo_data['telegram_user_id'],
            description=description,
            status='pending'
        )

        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        del temp_photos[user_id]

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
        keyboard = [
            [
                InlineKeyboardButton('–û–¥–æ–±—Ä–∏—Ç—å', callback_data=f'approve_{db_photo.id}'),
                InlineKeyboardButton('–û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data=f'reject_{db_photo.id}')
            ]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await context.bot.send_photo(
            chat_id=ADMIN_USER_ID,
            photo=open(db_photo.file_path, 'rb'),
            caption=f'–ù–æ–≤–æ–µ —Ñ–æ—Ç–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}\n–û–ø–∏—Å–∞–Ω–∏–µ: {description}',
            reply_markup=reply_markup
        )

        await update.message.reply_text('–°–ø–∞—Å–∏–±–æ! –í–∞—à–µ —Ñ–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é.')
        return ConversationHandler.END
    except Exception as e:
        logger.error(f"Error in handle_description: {e}")
        await update.message.reply_text('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–æ—Ç–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
        return ConversationHandler.END


async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        query = update.callback_query
        action, photo_id = query.data.split('_')
        photo = Photo.get_by_id(int(photo_id))

        if action == 'approve':
            photo.approve()
            await query.message.edit_caption('‚úÖ –§–æ—Ç–æ –æ–¥–æ–±—Ä–µ–Ω–æ')
            await context.bot.send_message(
                chat_id=photo.telegram_user_id,
                text='–í–∞—à–µ —Ñ–æ—Ç–æ –±—ã–ª–æ –æ–¥–æ–±—Ä–µ–Ω–æ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –≥–∞–ª–µ—Ä–µ—é –Ω–∞ —Å–∞–π—Ç–µ https://project.zombire.ru!'
            )
        elif action == 'reject':
            photo.reject()
            await query.message.edit_caption('‚ùå –§–æ—Ç–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ')
            await context.bot.send_message(
                chat_id=photo.telegram_user_id,
                text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–µ —Ñ–æ—Ç–æ –Ω–µ –±—ã–ª–æ –æ–¥–æ–±—Ä–µ–Ω–æ.'
            )

        await query.answer()
    except Exception as e:
        logger.error(f"Error in handle_callback: {e}")
        await query.answer('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.')


# –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏
async def delete_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥—É –≤—ã–∑—ã–≤–∞–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
        if update.effective_user.id != ADMIN_USER_ID:
            await update.message.reply_text('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã')
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–µ—Ä–µ–¥–∞–Ω ID —Ñ–æ—Ç–æ
        if not context.args or len(context.args) != 1:
            await update.message.reply_text('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /delete_photo <id>')
            return

        photo_id = int(context.args[0])
        photo = Photo.get_by_id(photo_id)

        if photo:
            # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª
            if os.path.exists(photo.file_path):
                os.remove(photo.file_path)

            # –£–¥–∞–ª—è–µ–º –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            photo.delete()

            await update.message.reply_text(f'–§–æ—Ç–æ —Å ID {photo_id} —É–¥–∞–ª–µ–Ω–æ')
        else:
            await update.message.reply_text(f'–§–æ—Ç–æ —Å ID {photo_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')

    except ValueError:
        await update.message.reply_text('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.')
    except Exception as e:
        logger.error(f"Error in delete_photo: {e}")
        await update.message.reply_text('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–æ—Ç–æ.')


async def unknown_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥—É –≤—ã–∑—ã–≤–∞–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
    await update.message.reply_text('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è –≤—ã–∑–æ–≤–∞ —Å–ø—Ä–∞–≤–∫–∏.')


# –ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –∞–¥–º–∏–Ω–∞
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if update.effective_user.id == ADMIN_USER_ID:
        help_text = """
    –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:
    
    /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
    /delete_photo <id> - –£–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ –ø–æ –µ–≥–æ ID
    /help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
    
    –ö–∞–∫ –Ω–∞–π—Ç–∏ ID —Ñ–æ—Ç–æ:
    - –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–æ—Ç–æ –≤ –≥–∞–ª–µ—Ä–µ–µ
    - ID –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Ñ–æ—Ç–æ
    """
        await update.message.reply_text(help_text)
    else:
        help_text = """
    ü§ñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞ Project Zombire üì∏
    
    1. –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã:
       - –ù–∞–∂–º–∏—Ç–µ /start –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –±–æ—Ç–∞
    
    2. –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ:
       - –û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–¥–Ω–æ —Ñ–æ—Ç–æ –≤ —á–∞—Ç
       - –í–∞–∂–Ω–æ: –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    
    3. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è:
       - –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
       - –û–ø–∏—Å–∞–Ω–∏–µ –ø–æ–º–æ–∂–µ—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É –ø–æ–Ω—è—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ñ–æ—Ç–æ
    
    4. –ú–æ–¥–µ—Ä–∞—Ü–∏—è:
       - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–æ–≤–µ—Ä–∏—Ç –≤–∞—à–µ —Ñ–æ—Ç–æ
       - –ü—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏, —Ñ–æ—Ç–æ –ø–æ–ø–∞–¥–µ—Ç –Ω–∞ —Å–∞–π—Ç https://project.zombire.ru
       - –ü—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏, –≤–∞–º –ø—Ä–∏–¥–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    
    ‚ùì –û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã?
    –°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º: admin@zombire.ru
    
    –£–¥–∞—á–∏ –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –≥–∞–ª–µ—Ä–µ–∏! üåü
    """
        await update.message.reply_text(help_text)


def ensure_photos_directory():
    photos_dir = Path('static/photos')
    photos_dir.mkdir(parents=True, exist_ok=True)
    logger.info(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Ñ–æ—Ç–æ: {photos_dir.absolute()}")

def main():
    ensure_photos_directory()
    init_db()

    application = Application.builder().token(TELEGRAM_BOT_TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[MessageHandler(filters.PHOTO, handle_photo)],
        states={
            'WAITING_DESCRIPTION': [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_description)]
        },
        fallbacks=[]
    )

    application.add_handler(conv_handler)
    application.add_handler(CallbackQueryHandler(handle_callback))

    # /start –∫–∞–∫ –æ–±—ã—á–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    application.add_handler(CommandHandler("start", start))

    # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(~filters.COMMAND & ~filters.PHOTO, unknown_command))

    # —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ –∏–∑ –ë–î
    application.add_handler(CommandHandler("delete_photo", delete_photo))

    # –ø–æ–º–æ—â—å
    application.add_handler(CommandHandler("help", help_command))

    application.run_polling()


if __name__ == '__main__':
    main()
